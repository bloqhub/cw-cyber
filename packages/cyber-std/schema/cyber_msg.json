{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CyberMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "cyberlink"
      ],
      "properties": {
        "cyberlink": {
          "type": "object",
          "required": [
            "links",
            "neuron"
          ],
          "properties": {
            "links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Link"
              }
            },
            "neuron": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "investmint"
      ],
      "properties": {
        "investmint": {
          "type": "object",
          "required": [
            "amount",
            "length",
            "neuron",
            "resource"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Coin"
            },
            "length": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "neuron": {
              "type": "string"
            },
            "resource": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "create_energy_route"
      ],
      "properties": {
        "create_energy_route": {
          "type": "object",
          "required": [
            "alias",
            "destination",
            "source"
          ],
          "properties": {
            "alias": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            },
            "source": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "edit_energy_route"
      ],
      "properties": {
        "edit_energy_route": {
          "type": "object",
          "required": [
            "destination",
            "source",
            "value"
          ],
          "properties": {
            "destination": {
              "type": "string"
            },
            "source": {
              "type": "string"
            },
            "value": {
              "$ref": "#/definitions/Coin"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "edit_energy_route_alias"
      ],
      "properties": {
        "edit_energy_route_alias": {
          "type": "object",
          "required": [
            "alias",
            "destination",
            "source"
          ],
          "properties": {
            "alias": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            },
            "source": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "delete_energy_route"
      ],
      "properties": {
        "delete_energy_route": {
          "type": "object",
          "required": [
            "destination",
            "source"
          ],
          "properties": {
            "destination": {
              "type": "string"
            },
            "source": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "create_thought"
      ],
      "properties": {
        "create_thought": {
          "type": "object",
          "required": [
            "load",
            "name",
            "particle",
            "program",
            "trigger"
          ],
          "properties": {
            "load": {
              "$ref": "#/definitions/Load"
            },
            "name": {
              "type": "string"
            },
            "particle": {
              "type": "string"
            },
            "program": {
              "type": "string"
            },
            "trigger": {
              "$ref": "#/definitions/Trigger"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "forget_thought"
      ],
      "properties": {
        "forget_thought": {
          "type": "object",
          "required": [
            "name",
            "program"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "program": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "change_thought_call_data"
      ],
      "properties": {
        "change_thought_call_data": {
          "type": "object",
          "required": [
            "call_data",
            "name",
            "program"
          ],
          "properties": {
            "call_data": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "program": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "change_thought_period"
      ],
      "properties": {
        "change_thought_period": {
          "type": "object",
          "required": [
            "name",
            "period",
            "program"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "period": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "program": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "change_thought_block"
      ],
      "properties": {
        "change_thought_block": {
          "type": "object",
          "required": [
            "block",
            "name",
            "program"
          ],
          "properties": {
            "block": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "name": {
              "type": "string"
            },
            "program": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Link": {
      "type": "object",
      "required": [
        "from",
        "to"
      ],
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "Load": {
      "type": "object",
      "required": [
        "call_data",
        "gas_price"
      ],
      "properties": {
        "call_data": {
          "type": "string"
        },
        "gas_price": {
          "$ref": "#/definitions/Coin"
        }
      }
    },
    "Trigger": {
      "type": "object",
      "required": [
        "block",
        "period"
      ],
      "properties": {
        "block": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "period": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
